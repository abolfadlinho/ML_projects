# -*- coding: utf-8 -*-
"""SpamEmailDetectorTPOT.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/17rCjbC-6Vdaxt2fJ06Pqy2-QbEdaqBzy
"""

!pip install tpot==0.12.0 numpy==1.24.4 scikit-learn==1.3.2 pandas==1.5.3 nltk==3.8.1

import pandas as pd
import numpy as np
import nltk
import re
from sklearn.model_selection import train_test_split
from sklearn.feature_extraction.text import TfidfVectorizer
from tpot import TPOTClassifier
from sklearn.metrics import classification_report, accuracy_score

nltk.download('stopwords')
from nltk.corpus import stopwords
stop_words = set(stopwords.words('english'))

#Load dataset: SMS Spam Collection dataset
url = "https://raw.githubusercontent.com/justmarkham/pycon-2016-tutorial/master/data/sms.tsv"
df = pd.read_csv(url, sep='\t', header=None, names=['label', 'message'])

# Encode labels: spam = 1, ham = 0
df['label'] = df['label'].map({'ham': 0, 'spam': 1})
df.head()

#Preprocessing
def clean_text(text):
    text = text.lower()
    text = re.sub(r'\W', ' ', text)  # Remove non-words
    text = re.sub(r'\s+', ' ', text)  # Remove extra whitespace
    text = ' '.join([word for word in text.split() if word not in stop_words])
    return text

df['cleaned'] = df['message'].apply(clean_text)

#Convert text to TF-IDF features
vectorizer = TfidfVectorizer()
X = vectorizer.fit_transform(df['cleaned']).toarray()
y = df['label'].values

#Train-test split
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42, stratify=y)

#TPOT AutoML Classifier
tpot = TPOTClassifier(generations=5, population_size=20, verbosity=2, random_state=42, max_time_mins=10)
tpot.fit(X_train, y_train)

#Evaluate model
y_pred = tpot.predict(X_test)
print("Accuracy:", accuracy_score(y_test, y_pred))
print(classification_report(y_test, y_pred))

#Export the best pipeline
tpot.export('best_spam_pipeline.py')